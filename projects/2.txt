1:HL["/Personal-Website/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
2:HL["/Personal-Website/_next/static/css/1a1e386cf48fb5be.css","style",{"crossOrigin":""}]
0:["ldUwnybBb8OYX5uuFWwDP",[[["",{"children":["(menu)",{"children":["projects",{"children":["2",{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/Personal-Website/_next/static/css/1a1e386cf48fb5be.css","precedence":"next","crossOrigin":""}]],"$L4"]]]]
5:HL["/Personal-Website/_next/static/css/65aa3619a1925c9d.css","style",{"crossOrigin":""}]
6:I[4689,["326","static/chunks/326-d6fa33696876feca.js","185","static/chunks/app/layout-6b266942fd9f8a52.js"],""]
7:I[6954,[],""]
8:I[7264,[],""]
9:I[7250,["326","static/chunks/326-d6fa33696876feca.js","496","static/chunks/496-5894c08cc623828f.js","72","static/chunks/app/(menu)/layout-d8542be93bfa29ef.js"],""]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Fei - RideMate"}],["$","meta","2",{"name":"description","content":"Generated by create next app"}],["$","meta","3",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","4",{"name":"next-size-adjust"}]]
3:[null,["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_aa4d39 font-inter antialiased bg-white text-gray-900 tracking-tight","children":["$","div",null,{"className":"flex flex-col min-h-screen overflow-hidden supports-[overflow:clip]:overflow-clip","children":[["$","$L6",null,{}],["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":[null,["$","$L9",null,{"children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","(menu)","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","(menu)","children","projects","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","(menu)","children","projects","children","2","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$La",["$","section",null,{"className":"bg-white py-12","children":["$","div",null,{"className":"max-w-2xl mx-auto px-4 sm:px-6 lg:px-8","children":[["$","div",null,{"className":"mb-12 text-center","data-aos":"zoom-y-out","children":[["$","h1",null,{"className":"text-5xl font-bold text-gray-800","children":"RideMate"}],["$","p",null,{"className":"mt-4 text-xl text-gray-600","children":"A web application designed to enhance the experience of using Dublin Bikes. It provides real-time and predictive information on bike availability and weather conditions."}]]}],["$","div",null,{"id":"project-overview","className":"mb-12","children":[["$","h2",null,{"className":"text-3xl font-semibold text-gray-800","children":"Project Overview"}],["$","div",null,{"className":"mt-4","children":["$","p",null,{"className":"mt-2 text-gray-600 text-lg","children":"The Dublin Bikes Web Application is designed to revolutionize the biking experience in Dublin by offering real-time and predictive insights on bike station occupancy and weather conditions. Tailored for regular cyclists, tourists, and those planning their rides around bike availability, this user-friendly platform features a real-time station locator, occupancy trend analysis, and weather integration. Users can easily find available bikes and return spaces, while benefiting from the predictive occupancy model that considers weather forecasts. The application's interactive interface, displaying maps and historical data, ensures a seamless experience. By improving decision-making and trip planning, it promises to enhance the efficiency and enjoyment of using Dublin Bikes, aligning with the city's sustainable transportation goals."}]}]]}],["$","div",null,{"id":"technology-stack","className":"mb-12","children":[["$","h2",null,{"className":"text-3xl font-semibold text-gray-800","children":"Technology Stack"}],["$","div",null,{"className":"mt-4","children":["$","p",null,{"className":"mt-2 text-gray-600 text-lg","children":[["$","strong",null,{"children":"Frontend: "}],["$","br",null,{}],"1. HTML, CSS, and JavaScript: The core building blocks for creating the user interface and handling user interactions.",["$","br",null,{}],"2. Jinja: Templating engine for reusing Python and Flask variables in HTML",["$","br",null,{}],"3. Google Maps JavaScript API: Used for visualising the location of bike stations on an interactive map and displaying additional information.",["$","br",null,{}],["$","strong",null,{"children":"Backend: "}],["$","br",null,{}],"1. Python: The primary programming language used for developing the backend server and related modules.",["$","br",null,{}],"2. Flask: A lightweight web framework for Python, which helps in creating the server-side API endpoints and handling bike station occupancy and weather data.",["$","br",null,{}],"3. SQLAlchemy: A SQL toolkit and Object-Relational Mapping (ORM) library for Python, used for managing the database connection and executing SQL queries.",["$","br",null,{}],"4. Google Maps Geocoding API: Used for converting addresses to geographic coordinates for station locations.",["$","br",null,{}],"5. External Weather API: An API for fetching real-time weather data based on the user's location.",["$","br",null,{}],["$","strong",null,{"children":"Data Analytics and Machine Learning: "}],["$","br",null,{}],"1. Pandas: A Python library for data manipulation and analysis, used for processing and preparing the dataset for machine learning models.",["$","br",null,{}],"2. Scikit-learn: A machine learning library for Python, used for the development of the predictive model to predict bike station occupancy based on weather patterns.",["$","br",null,{}],"3. Database: MySQL (relational databases) for storing historical bike occupancy data, weather data, and other relevant information.",["$","br",null,{}],"4. NumPy: A library for numerical computing in Python, used for handling arrays and mathematical operations in the data processing stage.",["$","br",null,{}],["$","strong",null,{"children":"Development Tools: "}],["$","br",null,{}],"1. Git: A version control system used for tracking changes in the source code and collaborating with other developers.",["$","br",null,{}],"2. GitHub: A web-based platform for hosting Git repositories and managing the project's codebase, issues, and collaboration.",["$","br",null,{}],"3. Visual Studio Code: A code editor used for writing, debugging, and testing the application code.",["$","br",null,{}],"4. Virtual Environments: Used for isolating Python dependencies and managing the project's environment.",["$","br",null,{}],"5. Diagramming Tool: Lucidchart is used for creating architecture diagrams and other visual documentation."]}]}]]}],["$","div",null,{"id":"architecture","className":"mb-12","children":[["$","h2",null,{"className":"text-3xl font-semibold text-gray-800","children":"Archtecture"}],["$","div",null,{"className":"mt-4","children":[["$","img",null,{"src":"/Personal-Website/images/RIDEMATE1.png","alt":"NYSeeNow_Architecture","className":"w-fulL"}],["$","p",null,{"className":"mt-2 text-gray-600 text-lg","children":[["$","strong",null,{"children":"External APIs: "}],["$","br",null,{}],"1. StationAPI: Provides real-time bike station data and their status.",["$","br",null,{}],"2. WeatherAPI (Open Meteo API): Offers weather data for the given location, including current weather, hourly, and daily forecasts.",["$","br",null,{}],"3. Google Maps API: Displays an interactive map with bike stations and possibly real- time availability information."]}],["$","p",null,{"className":"mt-2 text-gray-600 text-lg","children":[["$","strong",null,{"children":"Database: "}],["$","br",null,{}],"Data storage: Stores bike station, availability and weather data. It is an AWS RDS instance using a relational database (MySQL)."]}],["$","p",null,{"className":"mt-2 text-gray-600 text-lg","children":[["$","strong",null,{"children":"Backend (Server-side): "}],["$","br",null,{}],"1. Web server: Handles incoming requests from the frontend, processes the requests, and sends responses back to the frontend. It is mainly built using Python and a framework like Flask.",["$","br",null,{}],"2. Database interaction: The backend server connects to the database to fetch and store bike station data and availability statistics."]}],["$","p",null,{"className":"mt-2 text-gray-600 text-lg","children":[["$","strong",null,{"children":"Frontend (Client-side): "}],["$","br",null,{}],"1. User Interface (UI): Built with HTML, CSS, and JavaScript, the UI provides an interactive map with bike stations, sidebars displaying station details, and weather information.",["$","br",null,{}],"2. JavaScript functions: Handle UI interactions, fetch data from external APIs, and render charts using Google Charts."]}]]}]]}],["$","div",null,{"id":"features","className":"mb-12","children":[["$","h2",null,{"className":"text-3xl font-semibold text-gray-800","children":"FEATURES"}],["$","div",null,{"className":"mt-4","children":[["$","p",null,{"className":"mt-2 text-gray-600 text-lg","children":[["$","strong",null,{"children":"Display bike stations and occupancy information on a map:"}],["$","br",null,{}],"Each bike station is a marker on the map, with its color ranges from clear (no available bike) to light blue (very few available bikes) to darker blue (more available bikes) and to red (many available bikes). When hovering on the marker (in the shape of bike), user can see some information on the info window."]}],["$","p",null,{"className":"mt-2 text-gray-600 text-lg","children":[["$","strong",null,{"children":"Show weather and historical availability:"}],["$","br",null,{}],"When user click on a marker, the information about weather (current and in the next 24 hours) and historical average availability of bikes and bikestands (by day of week and by hour in the same weekday) shows up on the right sidebar."]}],["$","p",null,{"className":"mt-2 text-gray-600 text-lg","children":[["$","strong",null,{"children":"Predict available bikes:"}],["$","br",null,{}],"When user choose a time of today or tomorrow, they can get the prediction of available bikes for that time."]}],["$","p",null,{"className":"mt-2 text-gray-600 text-lg","children":[["$","strong",null,{"children":"Find 5 nearest stations:"}],["$","br",null,{}],"When user types in the search box, the search box is auto completed based on Google Places API. User can choose their desired location from the dropdown list. When five nearest stations to the chosen location are shown, user can click on each options to locate the station and interact with the corresponding marker."]}]]}]]}],["$","div",null,{"id":"my-contribution","className":"mb-12","children":[["$","h2",null,{"className":"text-3xl font-semibold text-gray-800","children":"My Contribution"}],["$","div",null,{"className":"mt-4","children":[["$","p",null,{"className":"mt-2 text-gray-600 text-lg","children":[["$","strong",null,{"children":"Backend development: "}],["$","br",null,{}],"I developed a comprehensive database schema for the project, ensuring efficient entity relationships, normalization, and performance. This involved creating tables with appropriate columns, data types, and key constraints. For RDS configuration, I managed the setup of an RDS instance, selecting the suitable database engine and size, and configuring security and access controls, while also monitoring its performance. I integrated weather data, fetching and processing it from an API, and subsequently writing it to the RDS instance. Additionally, I configured and set up the Google Maps API with necessary credentials and access controls."]}],["$","p",null,{"className":"mt-2 text-gray-600 text-lg","children":[["$","strong",null,{"children":"Frontend support: "}],["$","br",null,{}],"I implemented key features to enhance the functionality and user interface of a map-based application. These features included:",["$","br",null,{}],"1. Search Functionality: I developed a search feature allowing users to find specific locations. The app responds by showing the nearest stations to the searched location, improving user navigation and experience.",["$","br",null,{}],"2. Heat Map: Utilizing the Google Maps API, I implemented a heat map to visually represent station availability data. This feature helps users quickly identify areas with high or low availability of stations, enhancing the app's informational value.",["$","br",null,{}],"3. Markers: To make individual stations easily identifiable, I added markers on the map. These markers were accurately placed based on the stations' geographic coordinates and provided essential information about each station when clicked, improving interactive capabilities.",["$","br",null,{}],"4. Marker Hover: For an enriched user experience, I incorporated a marker hover feature. When a user hovers over a station marker, additional information about that station is displayed, making the application more informative and user-friendly."]}],["$","p",null,{"className":"mt-2 text-gray-600 text-lg","children":[["$","strong",null,{"children":"Project management: "}],["$","br",null,{}],"1. Participating in software requirement discussions: Identifying and defining key project requirements. Collaborating with team members to create a comprehensive and detailed project plan.",["$","br",null,{}],"2. Product mockups design: Collaborating with the team to create visual representations of the user interface. Providing feedback and suggestions to improve usability and user experience. Ensuring the mockups align with project requirements and specifications."]}],["$","p",null,{"className":"mt-2 text-gray-600 text-lg","children":[["$","strong",null,{"children":"Deployment and testing: "}],["$","br",null,{}],"1. Running the application on an EC2 instance: Configuring and setting up the AWS environment, including security groups and access controls. Deploying the application to the EC2 instance and configuring necessary services.",["$","br",null,{}],"2. Monitoring any issues during deployment and testing."]}]]}]]}],["$","div",null,{"id":"technical-challenges-and-solutions","className":"mb-12","children":[["$","h2",null,{"className":"text-3xl font-semibold text-gray-800","children":"Technical Challenges and Solutions"}],["$","div",null,{"className":"mt-4","children":["$","p",null,{"className":"mt-2 text-gray-600 text-lg","children":[["$","strong",null,{"children":"Learning Obstacles: "}],"The project required the use of several new tools and technologies that I was not familiar with. For instance, Flask is a new tool for me. The time spent on learning it was much more than I expected. Also, the deployment process is also challenging for me. To address this challenge, I studied online tutorials to understand the tools. Then I started with small projects such as show a simple searching table of station information with Flask to gain hands-on experience with the new tools. For the deployment, I reached out to my teammate and other classmates.",["$","br",null,{}],["$","strong",null,{"children":"User Interface Design: "}],"Creating a user interface that is both visually appealing and user-friendly posed a significant challenge. For example, when designing the left-side bar to create the interactions between left-side bar, marker, and right-side bar, It took me a long time to design the user flow and implement the function. To address this challenge, I firstly identify users’ needs then I employed an iterative design process, which involved creating mockups, gathering feedback, and refining the design.",["$","br",null,{}],["$","strong",null,{"children":"Performance optimization: "}],"As the application grew in complexity, the performance issue was a big challenge for me. For example, after realizing all the features we designed, we found that application's overall load time increased significantly. To address the performance issue, I improved database query performance by refining the SQL queries and adding appropriate indexes. On the frontend, I minimized the use of heavy libraries and implement a spinner to improve user experience."]}]}]]}],["$","div",null,{"id":"repository-information","className":"mb-12","children":[["$","h2",null,{"className":"text-3xl font-semibold text-gray-800","children":"Repository Information"}],["$","div",null,{"className":"mt-4","children":["$","p",null,{"className":"mt-2 text-gray-600 text-lg","children":"https://github.com/Fei117117/RideMate"}]}]]}],["$","div",null,{"className":"text-center mt-12","children":["$","a",null,{"href":"/Personal-Website/projects","className":"text-blue-600 hover:underline text-lg","children":"← Back to Projects"}]}]]}]}],null],"segment":"__PAGE__"},"styles":[]}],"segment":"2"},"styles":[]}],"segment":"projects"},"styles":[]}],"params":{}}],null],"segment":"(menu)"},"styles":[["$","link","0",{"rel":"stylesheet","href":"/Personal-Website/_next/static/css/65aa3619a1925c9d.css","precedence":"next","crossOrigin":""}]]}]]}]}]}],null]
a:null
